{
  "$schema": "https://specs.livecontracts.io/v0.1.0/scenario/schema.json",
  "actors": {
    "issuer": {
      "title": "License holder",
      "$ref": "https://specs.livecontracts.io/v0.1.0/actor/schema.json#organization"
    },
    "license_holder": {
      "title": "License holder",
      "$ref": "https://specs.livecontracts.io/v0.1.0/actor/schema.json#organization"
    },
    "transport": {
      "title": "Transport company",
      "$ref": "https://specs.livecontracts.io/v0.1.0/actor/schema.json#organization"
    },
    "recipient": {
      "title": "Recipient / Treatment facility",
      "$ref": "https://specs.livecontracts.io/v0.1.0/actor/schema.json#organization"
    },
    "processor": {
      "title": "Processor / Treatment facility",
      "$ref": "https://specs.livecontracts.io/v0.1.0/actor/schema.json#organization"
    }
  },
  "assets": {
    "license_process": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "shipment": {
      "type": "object",
      "properties": {
        "reference": {
          "description": "Notification No",
          "type": "string"
        },
        "material": {
          "description": "Shipment material",
          "type": "string"
        },
        "package_type": {
          "description": "Package type",
          "type": "string"
        },
        "shipment_date": {
          "description": "Date when the shipment will take place",
          "type": "string",
          "format": "date"
        },
        "quantity": {
          "description": "Intended quantity",
          "type": "number"
        },
        "received_quantity": {
          "description": "Actual quantity",
          "type": "number"
        }
      }
    },
    "notification": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "auth_token": {
          "type": "string"
        }
      }
    }
  },
  "definitions": {
    "rejected_form": {
      "$schema": "http://specs.legalthings.one/draft-01/form/schema.json",
      "title": "Shipment rejected",
      "definition": [{
        "fields": [
          {
            "$schema": "https://specs.livecontracts.io/v0.1.0/form/schema.json#textarea",
            "label": "Reason",
            "name": "reason"
          },
          {
            "$schema": "https://specs.livecontracts.io/v0.1.0/form/schema.json#select",
            "label": "Urgency",
            "name": "urgency",
            "options": [
              {
                "value": "normal",
                "label": "Normal"
              },
              {
                "value": "high",
                "label": "High"
              },
              {
                "value": "critical",
                "label": "Critical"
              }
            ],
            "default": "normal"
          }
        ]
      }]
    }
  },
  "actions": {
    "start": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#data",
      "actor": "license_holder",
      "responses": {
        "ok": {
          "title": "Started new shipment process",
          "update": [
            {
              "select": "name",
              "data": {
                "<tpl>": "Shipment {{ response.data.reference }}"
              }
            },
            {
              "select": "assets.shipment"
            },
            {
              "select": "assets.license_process.id",
              "apply": "license_process"
            },
            {
              "select": "actors.transport",
              "apply": "{ name: transport.name, signkeys: { user: transport.public_key } }"
            },
            {
              "select": "actors.recipient",
              "apply": "{ name: recipient.name, signkeys: { user: recipient.public_key } }"
            },
            {
              "select": "actors.processor",
              "apply": "{ name: processor.name, signkeys: { user: processor.public_key } }"
            },
            {
              "select": "assets.notification",
              "apply": "notification"
            }
          ]
        }
      }
    },
    "verify": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#event",
      "actor": "issuer",
      "body": {
        "$schema": "https://specs.livecontracts.io/v0.1.0/response/schema.json#",
        "process": {
          "<tpl>": "lt:/processes/{{ assets.license_process.id }}"
        },
        "action": "verify_shipment",
        "actor": "issuer",
        "data": {
          "<ref>": "merge({id: id}, assets.shipment}"
        }
      }
    },
    "continue": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#ack",
      "actor": "issuer",
      "responses": {
        "ok": {
          "title": "Transport validated"
        },
        "update": {
          "select": "assets.shipment.status",
          "data": "accepted"
        }
      }
    },
    "cancel": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#nop",
      "actor": "issuer",
      "responses": {
        "ok": {
          "title": "Shipment denied on verification"
        },
        "update": {
          "select": "assets.shipment.status",
          "data": "declined"
        }
      }
    },
    "add_actors": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#invite",
      "actor": "license_holder",
      "invitees": {
        "<apply>": {
          "ref": "[actors.transport, actors.recipient, actors.processor]",
          "query": "[].{ id: id, name: info.name, signkeys: signkeys }"
        }
      }
    },
    "transport": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#ack",
      "actor": "transport",
      "responses": {
        "ok": {
          "title": "Transport has started"
        }
      }
    },
    "receive": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#data",
      "actor": "recipient",
      "responses": {
        "ok": {
          "title": "Shipment is received",
          "update": {
            "select": "assets.shipment.received_quantity",
            "apply": "quantity"
          }
        }
      }
    },
    "reject": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#form",
      "actor": "recipient",
      "form": {
        "<ref>": "definitions.rejected_form"
      },
      "responses": {
        "ok": {
          "title": "Shipment is rejected",
          "update": {
            "select": "assets.shipment.status",
            "data": "rejected"
          }
        }
      }
    },
    "process": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#ack",
      "actor": "processor",
      "responses": {
        "ok": {
          "title": "Transport has been processed"
        }
      }
    },
    "complete": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#event",
      "actor": "issuer",
      "responses": {
        "ok": {
          "title": "Completed process",
          "update": {
            "select": "assets.shipment.status",
            "data": "completed"
          }
        }
      },
      "body": {
        "$schema": "https://specs.livecontracts.io/v0.1.0/response/schema.json#",
        "process": {
          "<tpl>": "lt:/processes/{{ assets.license_process.id }}"
        },
        "action": "end_shipment",
        "actor": "issuer",
        "key": "complete",
        "data": {
          "<ref>": "assets.shipment"
        }
      }
    },
    "notify": {
      "$schema": "https://specs.livecontracts.io/v0.1.0/action/schema.json#http",
      "actor": "issuer",
      "responses": {
        "display": "never"
      },
      "url": {
        "<ref>": "assets.notification.url"
      },
      "method": "POST",
      "headers": {
        "Content-Type": "application/json",
        "x-auth-token": {
          "<ref>": "assets.notification.auth_token"
        }
      },
      "data": {
        "<ref>": "assets.shipment"
      }
    }
  },
  "states": {
    ":initial": {
      "transitions": [{
        "action": "start",
        "transition": "verify"
      }]
    },
    "verify": {
      "transitions": [{
        "action": "verify",
        "transition": "waiting"
      }]
    },
    "waiting": {
      "transitions": [
        {
          "action": "continue",
          "transition": "accepted"
        },
        {
          "action": "cancel",
          "transition": "cancelled"
        }
      ]
    },
    "accepted": {
      "transitions": [{
        "action": "notify",
        "transition": "add_actors"
      }]
    },
    "add_actors": {
      "transitions": [{
        "action": "add_actors",
        "transition": "ready"
      }]
    },
    "ready": {
      "instructions": {
        "transporter": {
          "<tpl>": "You may start the transport of {{ assets.shipment.quantity }} ton of {{ assets.shipment.material }} to {{ actors.recipients.name }}."
        }
      },
      "default_action": ":none",
      "transitions": [{
        "action": "transport",
        "transition": "transporting"
      }]
    },
    "transporting": {
      "instructions": {
        "transporter": {
          "<tpl>": "{{ actors.receiver.name }} is required to digitally sign for acceptance upon delivery. You are not allowed to unload before delivery is accepted."
        },
        "receiver": "You are required to digitally sign for acception upon delivery via this app."
      },
      "transitions": [
        {
          "action": "receive",
          "transition": "received"
        },
        {
          "action": "reject",
          "transition": "cancelled"
        }
      ]
    },
    "received": {
      "transitions": [{
        "action": "process",
        "transition": "processed"
      }]
    },
    "processed": {
      "transitions": [{
        "action": "complete",
        "transition": "complete"
      }]
    },
    "complete": {
      "transitions": [{
        "action": "notify",
        "transition": ":success"
      }]
    },
    "cancelled": {
      "transitions": [{
        "action": "notify",
        "transition": ":failed"
      }]
    },
    ":success": {
      "transitions": []
    },
    ":failed": {
      "transitions": []
    }
  }
}
